<?xml version="1.0" ?>
<launch>

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false" />
    <arg name="use_sim_time" default="true" />
    <arg name="gui" default="true" />
    <arg name="headless" default="false" />
    <arg name="debug" default="false" />

    <!-- We resume the logic in empty_world.launch -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="use_sim_time" value="$(arg use_sim_time)" />
        <arg name="headless" value="$(arg headless)" />
    </include>


    <!-- urdf xml robot description loaded on the Parameter Server-->

    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find duda_description)/urdf/duda.urdf.xacro'" />

    <!-- launch joint state publisher -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="true" />
    </node>

    <!-- launch robot state pubslisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- launch rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model duda.urdf -param robot_description" />

    <!-- teleop already has its own built in velocity smoother -->
    <node pkg="duda_gazebo" type="teleop" name="teleop" output="screen">

        <param name="scale_linear" value="0.5" type="double" />
        <param name="scale_angular" value="1.5" type="double" />
        <remap from="duda/cmd_vel" to="/cmd_vel" />

    </node>

</launch>